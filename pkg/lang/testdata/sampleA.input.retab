TOOLS_DIR = "tools"

bins = {
		"buf"  = "github.com/bufbuild/buf/cmd/buf",
	"task" = "github.com/go-task/task/v3/cmd/task"
}

gen taskfile {
	// schema = "https://taskfile.dev/schema.json"
	path = "./sampleB.output.yaml"
	data = {
		version = 3
		tasks   = tsks
	}
}

tsks = merge(
	{
		for bin, zpath in bins : "${bin}-bin" => {
			generates = ["bin/${bin}"]
			dir       = "${TOOLS_DIR}"
			cmds = [
				"go build -mod=vendor -o ./bin/${bin} ${zpath}"
			]
						sources   = ["go.sum", "go.mod",  "main.go"]
		}
	},
	alloffun,
	{
		default = { deps = ["tools", "gen", "lint", "test"] }
		tools = {
			deps = [for bin, _ in bins : "${bin}-bin"]
		}
		genz = {
			deps = ["retab-gen", "buf-gen", "mockery-gen"]
			cmds = ["${self(-1).dir}"]
			dir  = "."
		}
	},
	{
		zroll = alloffunarray
	},
	allofnotask,
	{
		wrk = notask.def.label
	}
)

allofnotask   = allof("notask")
alloffun      = allof("task")
alloffunarray = allofarray("task")

notask def {
	cmds = [
		"z1",
		"z2",
		"z4",
		"z5",
				"z3",
		"z6",
	]

}

notask abc {
	cmds = ["echo \"abc\""]
}

BUF_OUTPUT     = "a"
MOCKERY_OUTPUT = "b"

task buf-gen {
	deps      = ["buf-bin", "retab-gen"]
	generates = ["gen/buf/**/*"]
	dir       = "."
	sources   = ["proto/**/*.proto", "./${TOOLS_DIR}/bin/buf", "./${BUF_OUTPUT}"]
	cmds = [
		<<EOF
		./${TOOLS_DIR}/bin/buf generate --include-imports --include-wkt --exclude-path="./vendor" --template ${BUF_OUTPUT} --path=./proto
		EOF
		,
		"find ./gen/buf -maxdepth 5 -type f -mmin +1 -delete"
	]
}



task tidy {
	cmds = [
		"go mod tidy",
		"cd ${TOOLS_DIR} && go mod tidy",
		"go work vendor"
	]
}


notask update {
	cmds = [
		"go get -u -v ./... && go mod tidy",
		"cd ${TOOLS_DIR} && go get -u -v ./... && go mod tidy",
		"go work vendor"
	]
}
